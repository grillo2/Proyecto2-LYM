// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Proyect.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Proyect {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=12;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=13;
      Object coder=$fix(Proyect.createCoder());
      $line=15;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=22;
      Object In=$fix($opIntvlY('a','z'));
      $line=23;
      Object Set2=$fix($opIntvlY(0,7));
      $line=24;
      Object Set3=$fix($opIntvlY('0','7'));
      $line=25;
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object start:GCollections.unmodifiableCollection($opUnionY(In,GCollections.asSet("")))) {
        for (Object pos:GCollections.unmodifiableCollection(Set2)) {
          gold.structures.set.ISet $v3=$newSet();
          int $v5=$int(0);
          int $v6=$int(pos);
          $v4:for (int i=$v5; i<=$v6; i++) {
            $v3.add(i);
          }
          for (Object times:GCollections.unmodifiableCollection($v3)) {
            $v1.add(GCollections.asList(start,pos,times));
          }
        }
      }
      Object Q=$fix($opUnionY($v1,GCollections.asSet(0)));
      $line=26;
      Object Out=$fix($opUnionY($opUnionY(In,Set3),GCollections.asSet('$')));
      $line=27;
      Object q_0=$fix(GCollections.asList("",7,0));
      $line=28;
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object start:GCollections.unmodifiableCollection($opUnionY(In,GCollections.asSet("")))) {
        for (Object pos:GCollections.unmodifiableCollection(GCollections.asSet(7))) {
          gold.structures.set.ISet $v9=$newSet();
          int $v11=$int(0);
          int $v12=$int(pos);
          $v10:for (int i=$v11; i<=$v12; i++) {
            $v9.add(i);
          }
          for (Object times:GCollections.unmodifiableCollection($v9)) {
            $v7.add(GCollections.asList(start,pos,times));
          }
        }
      }
      Object F=$fix($v7);
      $line=30;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,In,Out,q_0,F,new GMethod(Proyect.class,"\u03B4"),new GMethod(Proyect.class,"h"),new GMethod(Proyect.class,"g")});
      if (true) break $try;
      $line=33;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object h(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=35;
      $rethrow(new RuntimeException("The function \"h(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"h",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=37;
      $result=0;
      if (true) break $try;
      $line=38;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=41;
      $result="";
      if (true) break $try;
      $line=42;
      $rethrow(new RuntimeException("The function \"g(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"g",$line);
    }
    return $result;
  }
  public static Object \u03B4(java.lang.Iterable $v13, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v14=GCollections.unmodifiableCollection($v13).iterator();
      Object start=$v14.next();
      Object pos=$v14.next();
      Object times=$v14.next();
      $line=46;
      if ($opEqualY(pos,7)) {
        $line=46;
        $result=GCollections.asList(s,0,0);
        if (true) break $try;
      }
      else {
        $line=47;
        if ($opLesstY(pos,7)) {
          $line=48;
          if ($opEqualY(s,start)) {
            $line=48;
            $result=GCollections.asList(start,$opAdditY(pos,1),$opAdditY(times,1));
            if (true) break $try;
          }
          else {
            $line=49;
            $result=GCollections.asList(start,$opAdditY(pos,1),times);
            if (true) break $try;
          }
        }
        else {
          $line=51;
          $result=0;
          if (true) break $try;
        }
      }
      $line=53;
      $rethrow(new RuntimeException("The function \"\u03B4(\u27E8start,pos,times\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(java.lang.Iterable $v15, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v16=GCollections.unmodifiableCollection($v15).iterator();
      Object start=$v16.next();
      Object pos=$v16.next();
      Object times=$v16.next();
      $line=56;
      if ($opEqualY(pos,7)) {
        $line=56;
        $result=s;
        if (true) break $try;
      }
      else {
        $line=58;
        if ($opEqualY(pos,6)) {
          $line=58;
          $result=(($opEqualY(s,start))?($opAdditY("$",$opAdditY(times,1))):($opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(pos,1),""),s),"$"),times)));
          if (true) break $try;
        }
        else {
          $line=61;
          $result=(($opEqualY(s,start))?(""):($opAdditY($opAdditY($opAdditY(pos,1),""),s)));
          if (true) break $try;
        }
      }
      $line=63;
      $rethrow(new RuntimeException("The function \"g(\u27E8start,pos,times\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"g",$line);
    }
    return $result;
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=68;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Proyect.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
}
